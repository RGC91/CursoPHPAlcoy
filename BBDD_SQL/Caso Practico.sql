-- MySQL Script generated by MySQL Workbench
-- 02/08/17 13:34:16
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- NO LE DES A EJECUTAR TODO DE GOLPE, LAS CONSULTAS ESTAN AL FINAL.

-- INICIO CREACION BBDD


SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `cliente_id` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `NIF` VARCHAR(10) NULL,
  `Direccion` VARCHAR(45) NULL,
  `Telefono` INT(9) NULL,
  PRIMARY KEY (`cliente_id`),
  UNIQUE INDEX `NIF_UNIQUE` (`NIF` ASC));


-- -----------------------------------------------------
-- Table `mydb`.`Pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pedidos` (
  `Numero_id` INT NOT NULL AUTO_INCREMENT,
  `CodigoPedido` VARCHAR(10) NOT NULL,
  `Fecha creacion` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Fecha Aceptacion` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Comentarios` VARCHAR(45) NULL,
  `Cliente_cliente_id` INT NOT NULL,
  PRIMARY KEY (`Numero_id`, `Cliente_cliente_id`),
  UNIQUE INDEX `Codigo Pedido_UNIQUE` (`CodigoPedido` ASC),
  INDEX `fk_Pedidos_Cliente1_idx` (`Cliente_cliente_id` ASC),
  CONSTRAINT `fk_Pedidos_Cliente1`
    FOREIGN KEY (`Cliente_cliente_id`)
    REFERENCES `mydb`.`Cliente` (`cliente_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Productos` (
  `Producto_id` INT NOT NULL AUTO_INCREMENT,
  `Fabricante` VARCHAR(25) NOT NULL,
  `Nombre` VARCHAR(45) NULL,
  `Descripcion` VARCHAR(90) NULL,
  PRIMARY KEY (`Producto_id`, `Fabricante`));


-- -----------------------------------------------------
-- Table `mydb`.`Cliente-Cuenta-Bancaria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente-Cuenta-Bancaria` (
  `Entidad` INT(4) NOT NULL,
  `Oficina` INT(4) NOT NULL,
  `DC` INT(2) NOT NULL,
  `Numcuenta` INT(10) NOT NULL,
  `Cliente_cliente_id1` INT NOT NULL,
  PRIMARY KEY (`Entidad`, `Oficina`, `DC`, `Numcuenta`, `Cliente_cliente_id1`),
  INDEX `fk_Cliente-Cuenta-Bancaria_Cliente1_idx` (`Cliente_cliente_id1` ASC),
  CONSTRAINT `fk_Cliente-Cuenta-Bancaria_Cliente1`
    FOREIGN KEY (`Cliente_cliente_id1`)
    REFERENCES `mydb`.`Cliente` (`cliente_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Detalle_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Detalle_pedido` (
  `Cantidad` INT(3) NOT NULL,
  `Pedidos_Numero_id` INT NOT NULL,
  `Pedidos_Cliente_cliente_id` INT NOT NULL,
  `Precio` DECIMAL(10) NOT NULL,
  `Productos_Producto_id` INT NOT NULL,
  `Productos_Fabricante` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`Pedidos_Numero_id`, `Pedidos_Cliente_cliente_id`, `Productos_Producto_id`, `Productos_Fabricante`),
  INDEX `fk_Detalle pedido_Pedidos1_idx` (`Pedidos_Numero_id` ASC, `Pedidos_Cliente_cliente_id` ASC),
  INDEX `fk_Detalle pedido_Productos1_idx` (`Productos_Producto_id` ASC, `Productos_Fabricante` ASC),
  CONSTRAINT `fk_Detalle pedido_Pedidos1`
    FOREIGN KEY (`Pedidos_Numero_id` , `Pedidos_Cliente_cliente_id`)
    REFERENCES `mydb`.`Pedidos` (`Numero_id` , `Cliente_cliente_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Detalle pedido_Productos1`
    FOREIGN KEY (`Productos_Producto_id` , `Productos_Fabricante`)
    REFERENCES `mydb`.`Productos` (`Producto_id` , `Fabricante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


--FIN CREACION DDBB

--CONSULTAS 


  --DATOS BANCARIOS
  SELECT * FROM `cliente-cuenta-bancaria` --o 

  SELECT cliente.Nombre, * FROM `cliente-cuenta-bancaria`

  JOIN clientes ON `cliente-cuenta-bancaria`.`cliente_cliente_id1`=`cliente`.`cliente_id`;
  -- Listado de pedidos de un cliente
  SELECT * FROM Pedidos where cliente_cliente_id= (el cliente que quieras)
  
  --Listado de Pedidos con el importe total (Esta consulta posiblemente falle porque
  -- porque mi bbdd entiende los pedidos como cada vez que se realiza uno pides un tipo de articulo
  --  es decir no pueds pedir 2 de A y 2 de B en el mismo pedido, en lugar de eso haces 2 pedidos uno de A y uno de B)
  SELECT Cantidad,Precio, Pedidos_Numero_id, (Precio*Cantidad) as `Total` FROM detalle_pedido
  
  --Listado de clientes junto con el importe total de sus pedidos
  SELECT cliente.nombre ,SUM(Precio), Pedidos_Cliente_cliente_id 
  FROM detalle_pedido
  JOIN cliente ON cliente.cliente_id=Pedidos_Cliente_cliente_id
  GROUP BY cliente.cliente_id

